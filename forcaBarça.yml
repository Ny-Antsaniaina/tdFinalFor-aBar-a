openapi: 3.0.0
info:
  title: Football Competition Management API
  version: 1.0.0
  description: API for managing football competitions, teams, and players.

servers:
  - url: https://api.football-competition.com/v1
    description: Main (production) server

paths:
  /competitions:
    get:
      summary: Get a list of competitions
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: A list of competitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompetitionList'
    post:
      summary: Create a new competition
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Competition'
      responses:
        '201':
          description: Competition created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Competition'

  /teams:
    get:
      summary: Get a list of teams
      parameters:
        - name: teamName
          in: query
          schema:
            type: string
          description: Filter teams by name
        - name: page
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: A list of teams
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamList'
    post:
      summary: Create a new team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '201':
          description: Team created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'

  /teams/{teamId}/players:
    get:
      summary: Get a list of players for a specific team
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: string
        - name: playerName
          in: query
          schema:
            type: string
          description: Filter players by name
        - name: page
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: A list of players
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerList'
    post:
      summary: Create a new player for a specific team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
      responses:
        '201':
          description: Player created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'

components:
  schemas:
    Competition:
      type: object
      properties:
        name:
          type: string
          example: LIGA
        location:
          type: string
          description: The country or continent where the competition takes place
          example: ESPAGNE

    CompetitionList:
      type: object
      properties:
        competitions:
          type: array
          items:
            $ref: '#/components/schemas/Competition'
        totalItems:
          type: integer
        page:
          type: integer
        pageSize:
          type: integer

    Team:
      type: object
      properties:
        name:
          type: string
          example: Real Madrid
        slogan:
          type: string
          example: Hala Madrid
        competitions:
          type: array
          items:
            $ref: '#/components/schemas/Competition'
        players:
          type: array
          items:
            $ref: '#/components/schemas/Player'

    TeamList:
      type: object
      properties:
        teams:
          type: array
          items:
            $ref: '#/components/schemas/Team'
        totalItems:
          type: integer
        page:
          type: integer
        pageSize:
          type: integer

    Player:
      type: object
      properties:
        name:
          type: string
          example: Lionel Messi
        number:
          type: integer
          example: 10
        strongFoot:
          type: string
          enum:
            - Gauche
            - Droite
          example: Gauche

    PlayerList:
      type: object
      properties:
        players:
          type: array
          items:
            $ref: '#/components/schemas/Player'
        totalItems:
          type: integer
        page:
          type: integer
        pageSize:
          type: integer
